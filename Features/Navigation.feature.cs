// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by Reqnroll (https://www.reqnroll.net/).
//      Reqnroll Version:3.0.0.0
//      Reqnroll Generator Version:3.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
using Reqnroll;
namespace AutomatedFlow.Features
{
    
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Reqnroll", "3.0.0.0")]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::NUnit.Framework.TestFixtureAttribute()]
    [global::NUnit.Framework.DescriptionAttribute("Navigation")]
    [global::NUnit.Framework.FixtureLifeCycleAttribute(global::NUnit.Framework.LifeCycle.InstancePerTestCase)]
    [global::NUnit.Framework.CategoryAttribute("feature:Navigation")]
    [global::NUnit.Framework.CategoryAttribute("severity:critical")]
    public partial class NavigationFeature
    {
        
        private global::Reqnroll.ITestRunner testRunner;
        
        private static string[] featureTags = new string[] {
                "feature:Navigation",
                "severity:critical"};
        
        private static global::Reqnroll.FeatureInfo featureInfo = new global::Reqnroll.FeatureInfo(new global::System.Globalization.CultureInfo("en-US"), "Features", "Navigation", "As a user, \r\nI want to be able to navigate to different pages on the \r\nIntegræ So" +
                "lutions website so that \r\nI can access the information and features I need.", global::Reqnroll.ProgrammingLanguage.CSharp, featureTags, InitializeCucumberMessages());
        
#line 1 "Navigation.feature"
#line hidden
        
        [global::NUnit.Framework.OneTimeSetUpAttribute()]
        public static async global::System.Threading.Tasks.Task FeatureSetupAsync()
        {
        }
        
        [global::NUnit.Framework.OneTimeTearDownAttribute()]
        public static async global::System.Threading.Tasks.Task FeatureTearDownAsync()
        {
            await global::Reqnroll.TestRunnerManager.ReleaseFeatureAsync(featureInfo);
        }
        
        [global::NUnit.Framework.SetUpAttribute()]
        public async global::System.Threading.Tasks.Task TestInitializeAsync()
        {
            testRunner = global::Reqnroll.TestRunnerManager.GetTestRunnerForAssembly(featureHint: featureInfo);
            try
            {
                if (((testRunner.FeatureContext != null) 
                            && (testRunner.FeatureContext.FeatureInfo.Equals(featureInfo) == false)))
                {
                    await testRunner.OnFeatureEndAsync();
                }
            }
            finally
            {
                if (((testRunner.FeatureContext != null) 
                            && testRunner.FeatureContext.BeforeFeatureHookFailed))
                {
                    throw new global::Reqnroll.ReqnrollException("Scenario skipped because of previous before feature hook error");
                }
                if ((testRunner.FeatureContext == null))
                {
                    await testRunner.OnFeatureStartAsync(featureInfo);
                }
            }
        }
        
        [global::NUnit.Framework.TearDownAttribute()]
        public async global::System.Threading.Tasks.Task TestTearDownAsync()
        {
            if ((testRunner == null))
            {
                return;
            }
            try
            {
                await testRunner.OnScenarioEndAsync();
            }
            finally
            {
                global::Reqnroll.TestRunnerManager.ReleaseTestRunner(testRunner);
                testRunner = null;
            }
        }
        
        public void ScenarioInitialize(global::Reqnroll.ScenarioInfo scenarioInfo, global::Reqnroll.RuleInfo ruleInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo, ruleInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<global::NUnit.Framework.TestContext>(global::NUnit.Framework.TestContext.CurrentContext);
        }
        
        public async global::System.Threading.Tasks.Task ScenarioStartAsync()
        {
            await testRunner.OnScenarioStartAsync();
        }
        
        public async global::System.Threading.Tasks.Task ScenarioCleanupAsync()
        {
            await testRunner.CollectScenarioErrorsAsync();
        }
        
        public virtual async global::System.Threading.Tasks.Task FeatureBackgroundAsync()
        {
#line 8
#line hidden
#line 9
 await testRunner.GivenAsync("I navigate to Integræ Solutions homepage", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
        }
        
        private static global::Io.Cucumber.Messages.Types.Source SourceFunc()
        {
            return new global::Io.Cucumber.Messages.Types.Source("Features/Navigation.feature", @"@feature:Navigation @severity:critical
Feature: Navigation
As a user, 
I want to be able to navigate to different pages on the 
Integræ Solutions website so that 
I can access the information and features I need.

Background:
	Given I navigate to Integræ Solutions homepage

Scenario: Visit Homepage
	Then Elegant text is shown

Scenario: Access Projects page from the menu
	When Click on Projects link
	Then Projects page is shown

Scenario: Access About page from the menu
	When Click on About link
	Then About page is shown
	
Scenario: Access Comments page from the menu
	When Click on Comments link
	Then Comments page is shown

Scenario: Access all links in the body
	Then I click in all the links and they succeed", global::Io.Cucumber.Messages.Types.SourceMediaType.TEXT_X_CUCUMBER_GHERKIN_PLAIN);
        }
        
        private static global::Io.Cucumber.Messages.Types.GherkinDocument GherkinDocumentFunc()
        {
            return new global::Io.Cucumber.Messages.Types.GherkinDocument("Features/Navigation.feature", new global::Io.Cucumber.Messages.Types.Feature(new global::Io.Cucumber.Messages.Types.Location(2, new System.Nullable<long>(1)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Tag>(new global::Io.Cucumber.Messages.Types.Tag[] {
                                new global::Io.Cucumber.Messages.Types.Tag(new global::Io.Cucumber.Messages.Types.Location(1, new System.Nullable<long>(1)), "@feature:Navigation", "c4a38e4a69fcea57a9af0e532842ebe9"),
                                new global::Io.Cucumber.Messages.Types.Tag(new global::Io.Cucumber.Messages.Types.Location(1, new System.Nullable<long>(21)), "@severity:critical", "b30227ad4fdeeb5cb0c86cfebbf37ae4")}), "en-US", "Feature", "Navigation", "As a user, \r\nI want to be able to navigate to different pages on the \r\nIntegræ So" +
                        "lutions website so that \r\nI can access the information and features I need.", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.FeatureChild>(new global::Io.Cucumber.Messages.Types.FeatureChild[] {
                                new global::Io.Cucumber.Messages.Types.FeatureChild(null, new global::Io.Cucumber.Messages.Types.Background(new global::Io.Cucumber.Messages.Types.Location(8, new System.Nullable<long>(1)), "Background", "", "", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Step>(new global::Io.Cucumber.Messages.Types.Step[] {
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(9, new System.Nullable<long>(2)), "Given ", global::Io.Cucumber.Messages.Types.StepKeywordType.CONTEXT, "I navigate to Integræ Solutions homepage", null, null, "31798f7f8c8ddc57adb8d7bee58c70ba")}), "0134fc5481836256966093745c8564ab"), null),
                                new global::Io.Cucumber.Messages.Types.FeatureChild(null, null, new global::Io.Cucumber.Messages.Types.Scenario(new global::Io.Cucumber.Messages.Types.Location(11, new System.Nullable<long>(1)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Tag>(new global::Io.Cucumber.Messages.Types.Tag[0]), "Scenario", "Visit Homepage", "", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Step>(new global::Io.Cucumber.Messages.Types.Step[] {
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(12, new System.Nullable<long>(2)), "Then ", global::Io.Cucumber.Messages.Types.StepKeywordType.OUTCOME, "Elegant text is shown", null, null, "9fb797d5e9a04558a97c1f7338302d6f")}), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Examples>(new global::Io.Cucumber.Messages.Types.Examples[0]), "434dff4d276ef25c9f6c7ee3ba7846ad")),
                                new global::Io.Cucumber.Messages.Types.FeatureChild(null, null, new global::Io.Cucumber.Messages.Types.Scenario(new global::Io.Cucumber.Messages.Types.Location(14, new System.Nullable<long>(1)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Tag>(new global::Io.Cucumber.Messages.Types.Tag[0]), "Scenario", "Access Projects page from the menu", "", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Step>(new global::Io.Cucumber.Messages.Types.Step[] {
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(15, new System.Nullable<long>(2)), "When ", global::Io.Cucumber.Messages.Types.StepKeywordType.ACTION, "Click on Projects link", null, null, "45e34ff1a816465abde7e69058edfccc"),
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(16, new System.Nullable<long>(2)), "Then ", global::Io.Cucumber.Messages.Types.StepKeywordType.OUTCOME, "Projects page is shown", null, null, "996bbe3777e910569bdbafa33b9fe520")}), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Examples>(new global::Io.Cucumber.Messages.Types.Examples[0]), "ee923e9810cae056a9eb224cc7423244")),
                                new global::Io.Cucumber.Messages.Types.FeatureChild(null, null, new global::Io.Cucumber.Messages.Types.Scenario(new global::Io.Cucumber.Messages.Types.Location(18, new System.Nullable<long>(1)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Tag>(new global::Io.Cucumber.Messages.Types.Tag[0]), "Scenario", "Access About page from the menu", "", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Step>(new global::Io.Cucumber.Messages.Types.Step[] {
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(19, new System.Nullable<long>(2)), "When ", global::Io.Cucumber.Messages.Types.StepKeywordType.ACTION, "Click on About link", null, null, "0f0a670b68982b5fb49cf27cff973f9a"),
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(20, new System.Nullable<long>(2)), "Then ", global::Io.Cucumber.Messages.Types.StepKeywordType.OUTCOME, "About page is shown", null, null, "1d8f420837cf7653b478bf4ea8c7d569")}), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Examples>(new global::Io.Cucumber.Messages.Types.Examples[0]), "fc30babe59e9cf54a9e9e93d059bb664")),
                                new global::Io.Cucumber.Messages.Types.FeatureChild(null, null, new global::Io.Cucumber.Messages.Types.Scenario(new global::Io.Cucumber.Messages.Types.Location(22, new System.Nullable<long>(1)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Tag>(new global::Io.Cucumber.Messages.Types.Tag[0]), "Scenario", "Access Comments page from the menu", "", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Step>(new global::Io.Cucumber.Messages.Types.Step[] {
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(23, new System.Nullable<long>(2)), "When ", global::Io.Cucumber.Messages.Types.StepKeywordType.ACTION, "Click on Comments link", null, null, "1b1549064326e651b397e4966ed609f7"),
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(24, new System.Nullable<long>(2)), "Then ", global::Io.Cucumber.Messages.Types.StepKeywordType.OUTCOME, "Comments page is shown", null, null, "446f23f480e46353b0c2ecb8c30115e2")}), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Examples>(new global::Io.Cucumber.Messages.Types.Examples[0]), "d4a32be434098b50a8acefc6246b0cbb")),
                                new global::Io.Cucumber.Messages.Types.FeatureChild(null, null, new global::Io.Cucumber.Messages.Types.Scenario(new global::Io.Cucumber.Messages.Types.Location(26, new System.Nullable<long>(1)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Tag>(new global::Io.Cucumber.Messages.Types.Tag[0]), "Scenario", "Access all links in the body", "", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Step>(new global::Io.Cucumber.Messages.Types.Step[] {
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(27, new System.Nullable<long>(2)), "Then ", global::Io.Cucumber.Messages.Types.StepKeywordType.OUTCOME, "I click in all the links and they succeed", null, null, "992b126173131f5d999c769f1e044b3a")}), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Examples>(new global::Io.Cucumber.Messages.Types.Examples[0]), "1ad6eadef4143d5d867bee52719642c8"))})), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Comment>(new global::Io.Cucumber.Messages.Types.Comment[0]));
        }
        
        private static global::System.Collections.Generic.IEnumerable<Io.Cucumber.Messages.Types.Pickle> PicklesFunc()
        {
            return new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Pickle>(new global::Io.Cucumber.Messages.Types.Pickle[] {
                        new global::Io.Cucumber.Messages.Types.Pickle("f2cb8e1dc30df3599dc1c695ab153278", "Features/Navigation.feature", "Visit Homepage", "en-US", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleStep>(new global::Io.Cucumber.Messages.Types.PickleStep[] {
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "31798f7f8c8ddc57adb8d7bee58c70ba"}), "8defcdc71fa4a25b88bbda5ab5ea06fe", global::Io.Cucumber.Messages.Types.PickleStepType.CONTEXT, "I navigate to Integræ Solutions homepage"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "9fb797d5e9a04558a97c1f7338302d6f"}), "c292e2642b39325a8523aee9e18214cb", global::Io.Cucumber.Messages.Types.PickleStepType.OUTCOME, "Elegant text is shown")}), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTag>(new global::Io.Cucumber.Messages.Types.PickleTag[] {
                                        new global::Io.Cucumber.Messages.Types.PickleTag("@feature:Navigation", "c4a38e4a69fcea57a9af0e532842ebe9"),
                                        new global::Io.Cucumber.Messages.Types.PickleTag("@severity:critical", "b30227ad4fdeeb5cb0c86cfebbf37ae4")}), new System.Collections.Generic.List<string>(new string[] {
                                        "434dff4d276ef25c9f6c7ee3ba7846ad"})),
                        new global::Io.Cucumber.Messages.Types.Pickle("121f67b62c4d925c9e29bdb71f619359", "Features/Navigation.feature", "Access Projects page from the menu", "en-US", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleStep>(new global::Io.Cucumber.Messages.Types.PickleStep[] {
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "31798f7f8c8ddc57adb8d7bee58c70ba"}), "caa37c8515fbac5e90ccb80d2cb3991c", global::Io.Cucumber.Messages.Types.PickleStepType.CONTEXT, "I navigate to Integræ Solutions homepage"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "45e34ff1a816465abde7e69058edfccc"}), "befe0aaa78fd2e5f9006c871a9fffad8", global::Io.Cucumber.Messages.Types.PickleStepType.ACTION, "Click on Projects link"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "996bbe3777e910569bdbafa33b9fe520"}), "95a47de520e6de5085d539038484f144", global::Io.Cucumber.Messages.Types.PickleStepType.OUTCOME, "Projects page is shown")}), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTag>(new global::Io.Cucumber.Messages.Types.PickleTag[] {
                                        new global::Io.Cucumber.Messages.Types.PickleTag("@feature:Navigation", "c4a38e4a69fcea57a9af0e532842ebe9"),
                                        new global::Io.Cucumber.Messages.Types.PickleTag("@severity:critical", "b30227ad4fdeeb5cb0c86cfebbf37ae4")}), new System.Collections.Generic.List<string>(new string[] {
                                        "ee923e9810cae056a9eb224cc7423244"})),
                        new global::Io.Cucumber.Messages.Types.Pickle("3e56f16507387752a51efd4887d09e93", "Features/Navigation.feature", "Access About page from the menu", "en-US", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleStep>(new global::Io.Cucumber.Messages.Types.PickleStep[] {
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "31798f7f8c8ddc57adb8d7bee58c70ba"}), "3a6f1ce8647c075ea66a65c874b357ff", global::Io.Cucumber.Messages.Types.PickleStepType.CONTEXT, "I navigate to Integræ Solutions homepage"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "0f0a670b68982b5fb49cf27cff973f9a"}), "ee1c52a949fa73569f4c4dc9da5459e9", global::Io.Cucumber.Messages.Types.PickleStepType.ACTION, "Click on About link"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "1d8f420837cf7653b478bf4ea8c7d569"}), "070f0efae1b5ad5885168b58d62bb0ff", global::Io.Cucumber.Messages.Types.PickleStepType.OUTCOME, "About page is shown")}), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTag>(new global::Io.Cucumber.Messages.Types.PickleTag[] {
                                        new global::Io.Cucumber.Messages.Types.PickleTag("@feature:Navigation", "c4a38e4a69fcea57a9af0e532842ebe9"),
                                        new global::Io.Cucumber.Messages.Types.PickleTag("@severity:critical", "b30227ad4fdeeb5cb0c86cfebbf37ae4")}), new System.Collections.Generic.List<string>(new string[] {
                                        "fc30babe59e9cf54a9e9e93d059bb664"})),
                        new global::Io.Cucumber.Messages.Types.Pickle("2493ffbecafd595d8d3cb8b07ba56beb", "Features/Navigation.feature", "Access Comments page from the menu", "en-US", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleStep>(new global::Io.Cucumber.Messages.Types.PickleStep[] {
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "31798f7f8c8ddc57adb8d7bee58c70ba"}), "e261a05972b4b75ca83e5c8bcde68868", global::Io.Cucumber.Messages.Types.PickleStepType.CONTEXT, "I navigate to Integræ Solutions homepage"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "1b1549064326e651b397e4966ed609f7"}), "b58c3e0b4d14c454aacfeff35d7ed880", global::Io.Cucumber.Messages.Types.PickleStepType.ACTION, "Click on Comments link"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "446f23f480e46353b0c2ecb8c30115e2"}), "717b506183d45754b0042457b2ef61af", global::Io.Cucumber.Messages.Types.PickleStepType.OUTCOME, "Comments page is shown")}), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTag>(new global::Io.Cucumber.Messages.Types.PickleTag[] {
                                        new global::Io.Cucumber.Messages.Types.PickleTag("@feature:Navigation", "c4a38e4a69fcea57a9af0e532842ebe9"),
                                        new global::Io.Cucumber.Messages.Types.PickleTag("@severity:critical", "b30227ad4fdeeb5cb0c86cfebbf37ae4")}), new System.Collections.Generic.List<string>(new string[] {
                                        "d4a32be434098b50a8acefc6246b0cbb"})),
                        new global::Io.Cucumber.Messages.Types.Pickle("4e3993285e71135e9994a9035d5935b2", "Features/Navigation.feature", "Access all links in the body", "en-US", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleStep>(new global::Io.Cucumber.Messages.Types.PickleStep[] {
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "31798f7f8c8ddc57adb8d7bee58c70ba"}), "deda0c3c76828257aa4df54e5c0e7f51", global::Io.Cucumber.Messages.Types.PickleStepType.CONTEXT, "I navigate to Integræ Solutions homepage"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "992b126173131f5d999c769f1e044b3a"}), "36558685d69b2357a01f232b0771ce8a", global::Io.Cucumber.Messages.Types.PickleStepType.OUTCOME, "I click in all the links and they succeed")}), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTag>(new global::Io.Cucumber.Messages.Types.PickleTag[] {
                                        new global::Io.Cucumber.Messages.Types.PickleTag("@feature:Navigation", "c4a38e4a69fcea57a9af0e532842ebe9"),
                                        new global::Io.Cucumber.Messages.Types.PickleTag("@severity:critical", "b30227ad4fdeeb5cb0c86cfebbf37ae4")}), new System.Collections.Generic.List<string>(new string[] {
                                        "1ad6eadef4143d5d867bee52719642c8"}))});
        }
        
        private static global::Reqnroll.Formatters.RuntimeSupport.FeatureLevelCucumberMessages InitializeCucumberMessages()
        {
            return new global::Reqnroll.Formatters.RuntimeSupport.FeatureLevelCucumberMessages(new global::System.Func<Io.Cucumber.Messages.Types.Source>(NavigationFeature.SourceFunc), new global::System.Func<Io.Cucumber.Messages.Types.GherkinDocument>(NavigationFeature.GherkinDocumentFunc), new global::System.Func<System.Collections.Generic.IEnumerable<Io.Cucumber.Messages.Types.Pickle>>(NavigationFeature.PicklesFunc));
        }
        
        [global::NUnit.Framework.TestAttribute()]
        [global::NUnit.Framework.DescriptionAttribute("Visit Homepage")]
        public async global::System.Threading.Tasks.Task VisitHomepage()
        {
            string[] tagsOfScenario = ((string[])(null));
            global::System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new global::System.Collections.Specialized.OrderedDictionary();
            string pickleIndex = "0";
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("Visit Homepage", null, tagsOfScenario, argumentsOfScenario, featureTags, pickleIndex);
            string[] tagsOfRule = ((string[])(null));
            global::Reqnroll.RuleInfo ruleInfo = null;
#line 11
this.ScenarioInitialize(scenarioInfo, ruleInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                await testRunner.SkipScenarioAsync();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 8
await this.FeatureBackgroundAsync();
#line hidden
#line 12
 await testRunner.ThenAsync("Elegant text is shown", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
        
        [global::NUnit.Framework.TestAttribute()]
        [global::NUnit.Framework.DescriptionAttribute("Access Projects page from the menu")]
        public async global::System.Threading.Tasks.Task AccessProjectsPageFromTheMenu()
        {
            string[] tagsOfScenario = ((string[])(null));
            global::System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new global::System.Collections.Specialized.OrderedDictionary();
            string pickleIndex = "1";
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("Access Projects page from the menu", null, tagsOfScenario, argumentsOfScenario, featureTags, pickleIndex);
            string[] tagsOfRule = ((string[])(null));
            global::Reqnroll.RuleInfo ruleInfo = null;
#line 14
this.ScenarioInitialize(scenarioInfo, ruleInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                await testRunner.SkipScenarioAsync();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 8
await this.FeatureBackgroundAsync();
#line hidden
#line 15
 await testRunner.WhenAsync("Click on Projects link", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 16
 await testRunner.ThenAsync("Projects page is shown", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
        
        [global::NUnit.Framework.TestAttribute()]
        [global::NUnit.Framework.DescriptionAttribute("Access About page from the menu")]
        public async global::System.Threading.Tasks.Task AccessAboutPageFromTheMenu()
        {
            string[] tagsOfScenario = ((string[])(null));
            global::System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new global::System.Collections.Specialized.OrderedDictionary();
            string pickleIndex = "2";
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("Access About page from the menu", null, tagsOfScenario, argumentsOfScenario, featureTags, pickleIndex);
            string[] tagsOfRule = ((string[])(null));
            global::Reqnroll.RuleInfo ruleInfo = null;
#line 18
this.ScenarioInitialize(scenarioInfo, ruleInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                await testRunner.SkipScenarioAsync();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 8
await this.FeatureBackgroundAsync();
#line hidden
#line 19
 await testRunner.WhenAsync("Click on About link", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 20
 await testRunner.ThenAsync("About page is shown", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
        
        [global::NUnit.Framework.TestAttribute()]
        [global::NUnit.Framework.DescriptionAttribute("Access Comments page from the menu")]
        public async global::System.Threading.Tasks.Task AccessCommentsPageFromTheMenu()
        {
            string[] tagsOfScenario = ((string[])(null));
            global::System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new global::System.Collections.Specialized.OrderedDictionary();
            string pickleIndex = "3";
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("Access Comments page from the menu", null, tagsOfScenario, argumentsOfScenario, featureTags, pickleIndex);
            string[] tagsOfRule = ((string[])(null));
            global::Reqnroll.RuleInfo ruleInfo = null;
#line 22
this.ScenarioInitialize(scenarioInfo, ruleInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                await testRunner.SkipScenarioAsync();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 8
await this.FeatureBackgroundAsync();
#line hidden
#line 23
 await testRunner.WhenAsync("Click on Comments link", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 24
 await testRunner.ThenAsync("Comments page is shown", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
        
        [global::NUnit.Framework.TestAttribute()]
        [global::NUnit.Framework.DescriptionAttribute("Access all links in the body")]
        public async global::System.Threading.Tasks.Task AccessAllLinksInTheBody()
        {
            string[] tagsOfScenario = ((string[])(null));
            global::System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new global::System.Collections.Specialized.OrderedDictionary();
            string pickleIndex = "4";
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("Access all links in the body", null, tagsOfScenario, argumentsOfScenario, featureTags, pickleIndex);
            string[] tagsOfRule = ((string[])(null));
            global::Reqnroll.RuleInfo ruleInfo = null;
#line 26
this.ScenarioInitialize(scenarioInfo, ruleInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                await testRunner.SkipScenarioAsync();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 8
await this.FeatureBackgroundAsync();
#line hidden
#line 27
 await testRunner.ThenAsync("I click in all the links and they succeed", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
    }
}
#pragma warning restore
#endregion
